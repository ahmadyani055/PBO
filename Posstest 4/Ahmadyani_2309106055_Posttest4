import java.util.ArrayList;
import java.util.Scanner;

class User {
    protected String id;
    protected String nama;

    public User(String id, String nama) {
        this.id = id;
        this.nama = nama;
    }

    public void tampilkanData() {
        System.out.println("ID: " + id + ", Nama: " + nama);
    }

    public void tampilkanData(String prefix) {
        System.out.println(prefix + "ID: " + id + ", Nama: " + nama);
    }
}

class Pasien extends User {
    private int usia;

    public Pasien(String idPasien, String nama, int usia) {
        super(idPasien, nama);
        this.usia = usia;
    }

    public int getUsia() {
        return usia;
    }

    public void setUsia(int usia) {
        if (usia > 0) {
            this.usia = usia;
        }
    }

    @Override
    public void tampilkanData() {
        System.out.println("Pasien - ID: " + id + ", Nama: " + nama + ", Usia: " + usia);
    }
}

class Dokter extends User {
    private String spesialisasi;

    public Dokter(String idDokter, String nama, String spesialisasi) {
        super(idDokter, nama);
        this.spesialisasi = spesialisasi;
    }

    public String getSpesialisasi() {
        return spesialisasi;
    }

    public void setSpesialisasi(String spesialisasi) {
        this.spesialisasi = spesialisasi;
    }

    @Override
    public void tampilkanData() {
        System.out.println("Dokter - ID: " + id + ", Nama: " + nama + ", Spesialisasi: " + spesialisasi);
    }
}

public class Posttest3 {
    static ArrayList<Pasien> daftarPasien = new ArrayList<>();
    static ArrayList<Dokter> daftarDokter = new ArrayList<>();
    static Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        int pilihan;
        do {
            System.out.println("\nMenu:");
            System.out.println("1. Tambah Pasien");
            System.out.println("2. Tampilkan Pasien");
            System.out.println("3. Hapus Pasien");
            System.out.println("4. Tambah Dokter");
            System.out.println("5. Tampilkan Dokter");
            System.out.println("6. Hapus Dokter");
            System.out.println("7. Coba Polymorphism");
            System.out.println("8. Keluar");
            System.out.print("Pilih menu: ");
            pilihan = scanner.nextInt();
            scanner.nextLine();

            switch (pilihan) {
                case 1 -> tambahPasien();
                case 2 -> tampilkanPasien();
                case 3 -> hapusPasien();
                case 4 -> tambahDokter();
                case 5 -> tampilkanDokter();
                case 6 -> hapusDokter();
                case 7 -> cobaPolymorphism();
                case 8 -> System.out.println("Keluar...");
                default -> System.out.println("Pilihan tidak valid.");
            }
        } while (pilihan != 8);
    }

    static void tambahPasien() {
        System.out.print("ID Pasien: ");
        String id = scanner.nextLine();
        System.out.print("Nama: ");
        String nama = scanner.nextLine();
        System.out.print("Usia: ");
        int usia = scanner.nextInt(); scanner.nextLine();
        daftarPasien.add(new Pasien(id, nama, usia));
        System.out.println("Pasien ditambahkan.");
    }

    static void tampilkanPasien() {
        if (daftarPasien.isEmpty()) {
            System.out.println("Tidak ada data pasien.");
        } else {
            for (Pasien p : daftarPasien) {
                p.tampilkanData();
            }
        }
    }

    static void hapusPasien() {
        System.out.print("Masukkan ID Pasien yang ingin dihapus: ");
        String id = scanner.nextLine();
        boolean ditemukan = false;
        for (int i = 0; i < daftarPasien.size(); i++) {
            if (daftarPasien.get(i).id.equals(id)) {
                daftarPasien.remove(i);
                System.out.println("Pasien dengan ID " + id + " telah dihapus.");
                ditemukan = true;
                break;
            }
        }
        if (!ditemukan) {
            System.out.println("Pasien dengan ID " + id + " tidak ditemukan.");
        }
    }

    static void tambahDokter() {
        System.out.print("ID Dokter: ");
        String id = scanner.nextLine();
        System.out.print("Nama: ");
        String nama = scanner.nextLine();
        System.out.print("Spesialisasi: ");
        String spesialisasi = scanner.nextLine();
        daftarDokter.add(new Dokter(id, nama, spesialisasi));
        System.out.println("Dokter ditambahkan.");
    }

    static void tampilkanDokter() {
        if (daftarDokter.isEmpty()) {
            System.out.println("Tidak ada data dokter.");
        } else {
            for (Dokter d : daftarDokter) {
                d.tampilkanData();
            }
        }
    }

    static void hapusDokter() {
        System.out.print("Masukkan ID Dokter yang ingin dihapus: ");
        String id = scanner.nextLine();
        boolean ditemukan = false;
        for (int i = 0; i < daftarDokter.size(); i++) {
            if (daftarDokter.get(i).id.equals(id)) {
                daftarDokter.remove(i);
                System.out.println("Dokter dengan ID " + id + " telah dihapus.");
                ditemukan = true;
                break;
            }
        }
        if (!ditemukan) {
            System.out.println("Dokter dengan ID " + id + " tidak ditemukan.");
        }
    }

    static void cobaPolymorphism() {
        User u1 = new Pasien("P01", "Yani", 21);
        User u2 = new Dokter("D01", "Dr. Budi", "Anak");
        u1.tampilkanData();
        u2.tampilkanData();
        u1.tampilkanData(">>> ");
    }
}
